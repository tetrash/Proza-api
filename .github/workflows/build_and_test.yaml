name: Build and test

on:
  push:
    branches:
      - main
  pull_request:
    branches:
      - main

jobs:

  test:
    runs-on: ubuntu-latest

    strategy:
      matrix:
        node-version: [ 12.x ]

    steps:
      - uses: actions/checkout@v2
      - name: Use Node.js ${{ matrix.node-version }}
        uses: actions/setup-node@v1
        with:
          node-version: ${{ matrix.node-version }}
      - name: Cache node modules
        uses: actions/cache@v2
        env:
          cache-name: cache-node-modules
        with:
          path: ~/.yarn
          key: ${{ runner.os }}-build-${{ env.cache-name }}-${{ hashFiles('**/yarn.lock') }}
          restore-keys: |
            ${{ runner.os }}-build-${{ env.cache-name }}-
            ${{ runner.os }}-build-
            ${{ runner.os }}-
      - name: Install dependencies
        run: yarn install --frozen-lockfile
      - name: Run linter test
        run: yarn run lint
      - name: Run tests
        run: yarn test --ci --coverage --reporters=jest-junit
      - name: Upload test coverage
        if: success()
        uses: actions/upload-artifact@v2
        with:
          name: test-coverage
          path: coverage
      - name: Upload test results
        if: always()
        uses: actions/upload-artifact@v2
        with:
          name: test-results
          path: junit.xml

  build:
    runs-on: ubuntu-latest

    strategy:
      matrix:
        node-version: [ 12.x ]

    steps:
      - uses: actions/checkout@v2
      - name: Use Node.js ${{ matrix.node-version }}
        uses: actions/setup-node@v1
        with:
          node-version: ${{ matrix.node-version }}
      - name: Cache node modules
        uses: actions/cache@v2
        env:
          cache-name: cache-node-modules
        with:
          path: ~/.yarn
          key: ${{ runner.os }}-build-${{ env.cache-name }}-${{ hashFiles('**/yarn.lock') }}
          restore-keys: |
            ${{ runner.os }}-build-${{ env.cache-name }}-
            ${{ runner.os }}-build-
            ${{ runner.os }}-
      - name: Install dependencies
        run: yarn install --frozen-lockfile
      - name: Build
        run: yarn build
      - name: Upload build
        uses: actions/upload-artifact@master
        with:
          name: server-build
          path: dist

  publish-test-coverage:
    name: Publish tests coverage
    needs: test
    runs-on: ubuntu-latest
    if: success()

    steps:
      - uses: actions/checkout@v2
      - name: Download Artifacts
        uses: actions/download-artifact@v2
        with:
          name: test-coverage
          path: test-coverage
      - name: Publish test coverage
        uses: codecov/codecov-action@v1
        with:
          token: ${{ secrets.CODECOV_TOKEN }}
          directory: ./test-coverage

  publish-test-results:
    name: Publish tests results
    needs: test
    runs-on: ubuntu-latest
    if: failure()

    steps:
      - name: Download Artifacts
        uses: actions/download-artifact@v2
        with:
          name: test-results
          path: test-results
      - name: Publish test results
        uses: EnricoMi/publish-unit-test-result-action@v1.6
        with:
          check_name: Unit test results
          github_token: ${{ secrets.GITHUB_TOKEN }}
          files: ./test-results/junit.xml